[
  {
    "title": "Infrastructure",
    "slug": "Infrastructure",
    "date": "2025-03-26T00:00:00.000Z",
    "image": "images/ci:cd.webp",
    "technologies": [
      "Docker",
      "Jenkins",
      "Nginx",
      "HTTPS"
    ],
    "featured": true,
    "order": 1,
    "content": "<h2>Description</h2>\n<p><strong>Projet personnel</strong> — J&#39;ai développé une solution d’automatisation de déploiement pour éviter de tout refaire manuellement à chaque projet.<br>L&#39;objectif : mettre en place une <strong>chaîne CI/CD complète</strong>, sécurisée, et facilement réutilisable.</p>\n<p>Ce setup s’appuie sur :\n    - <strong>Jenkins</strong>\n    - <strong>Docker</strong>\n    - <strong>Nginx</strong>\n    - <strong>Let&#39;s Encrypt</strong>\n    - <strong>Un VPS DigitalOcean</strong></p>\n<p>Résultat : un push sur GitHub déclenche automatiquement le build, la création de l’image Docker, le push vers GHCR, et le déploiement via Docker sur le serveur — avec HTTPS activé.</p>\n<hr>\n<h2>🔧 Schéma d&#39;architecture</h2>\n<p><img src=\"images/infrastructure.png\" alt=\"Schéma d'Infrastructure CI/CD\"></p>\n<hr>\n<h2>Fonctionnalités</h2>\n<h3>🔧 Stack Technologique</h3>\n<pre><code>- Docker, Jenkins, Nginx, HTTPS, DigitalOcean\n- Déploiement automatisé depuis GitHub jusqu&#39;au VPS\n</code></pre>\n<h3>🏗️ Architecture</h3>\n<pre><code>- Reverse proxy Nginx\n- Configuration SSL automatique via Certbot\n</code></pre>\n<hr>\n<h2>Défis &amp; Solutions</h2>\n<h3>🧱 1. Multi-environnement</h3>\n<blockquote>\n<p><strong>Défi :</strong> Gérer <code>dev</code>, <code>staging</code>, et <code>prod</code> sur une seule machine<br><strong>Solution :</strong> Chaque projet est isolé dans un conteneur Docker exposé sur un port unique, derrière un reverse proxy Nginx.</p>\n</blockquote>\n<hr>\n<h3>🔐 2. HTTPS &amp; sécurité</h3>\n<blockquote>\n<p><strong>Défi :</strong> Servir les projets en HTTPS<br><strong>Solution :</strong> Intégration de Certbot avec renouvellement automatique des certificats Let&#39;s Encrypt.</p>\n</blockquote>\n<hr>\n<h3>🔁 3. Intégration continue</h3>\n<blockquote>\n<p><strong>Défi :</strong> Automatiser build, test, Docker, push et déploiement<br><strong>Solution :</strong> Jenkins + GitHub Webhooks = déploiement automatique dès un <code>git push</code>.</p>\n</blockquote>\n<hr>\n<h3>🌍 4. DNS personnalisé</h3>\n<blockquote>\n<p><strong>Défi :</strong> Utiliser un domaine chez un registrar externe (LWS)<br><strong>Solution :</strong> Reconfiguration des DNS pour pointer vers la VPS, configuration Nginx + Certbot.</p>\n</blockquote>\n<hr>\n<h2>Objectifs</h2>\n<h3>🚀 Performance</h3>\n<ul>\n<li>Uniformiser les environnements</li>\n<li>Réduire le temps de déploiement à <strong>quelques secondes</strong></li>\n</ul>\n<h3>🤝 Collaboration</h3>\n<ul>\n<li>Permettre à plusieurs projets (admin, front, API...) de cohabiter sur une même infra</li>\n<li>Architecture extensible pour ajouter d&#39;autres stacks</li>\n</ul>\n<hr>\n<h2>🎯 Résultat</h2>\n<p>Le site <strong><a href=\"https://pfsolutions.tech\">pfsolutions.tech</a></strong> est la première instance de ce setup :</p>\n<ul>\n<li><code>git push</code> → build Angular</li>\n<li>→ image Docker générée &amp; poussée</li>\n<li>→ déployée sur la VPS</li>\n<li>→ servie en HTTPS via Nginx + Certbot</li>\n</ul>\n<hr>\n<h2>🔭 Vision</h2>\n<p>Ce setup a été pensé pour évoluer :</p>\n<ul>\n<li>Multi-projets (front, back, microservices)</li>\n<li>Multi-environnements (dev/prod)</li>\n<li>Compatible Docker Compose &amp; Kubernetes</li>\n</ul>\n<hr>\n",
    "id": "infra"
  },
  {
    "title": "OneClick",
    "slug": "OneClick",
    "date": "2025-03-26T00:00:00.000Z",
    "image": "images/One-Click-Black.png",
    "technologies": [
      "React",
      "FastApi",
      "Go",
      "MariaDb"
    ],
    "featured": true,
    "order": 1,
    "content": "<h2>Description</h2>\n<p><strong>Projet de Fin d&#39;Études</strong> — OneClick est une plateforme innovante permettant de simplifier et d&#39;automatiser l&#39;initialisation de projets web. Grâce à une interface intuitive, OneClick génère les environnements de développement complets (frontend, backend, base de données) en quelques clics, en prenant en compte les technologies choisies par l&#39;utilisateur.</p>\n<h2>Fonctionnalités</h2>\n<h3>Stack Technologique</h3>\n<ul>\n<li>Sélection de stacks technologiques (React, Angular, NestJS, Node.js, FastAPI, etc.)</li>\n<li>Génération automatique de projets avec les dépendances adéquates</li>\n<li>Création de Dockerfiles compatibles avec les technologies sélectionnées</li>\n</ul>\n<h3>Architecture</h3>\n<ul>\n<li>Mode mono-repo ou multi-repo selon les préférences du développeur</li>\n<li>Interface utilisateur claire pour la configuration des projets</li>\n<li>Intégration d&#39;une base de données MariaDB avec configuration automatique</li>\n<li>Scripts Go pour la gestion et le déploiement des projets</li>\n</ul>\n<h2>Défis et Solutions</h2>\n<h3>1. Gestion des Technologies</h3>\n<p><strong>Défi :</strong> Gérer la compatibilité entre plusieurs combinaisons de technologies frontend et backend.<br><strong>Solution :</strong> Mise en place d&#39;un système modulaire basé sur des templates pour chaque stack, combinés dynamiquement selon le choix de l&#39;utilisateur.</p>\n<h3>2. Structure du Projet</h3>\n<p><strong>Défi :</strong> Offrir une flexibilité entre mono-repo et multi-repo.<br><strong>Solution :</strong> Conception d&#39;un générateur adaptatif capable de structurer les projets selon le mode sélectionné, avec une logique de routing conditionnelle.</p>\n<h3>3. Containerisation</h3>\n<p><strong>Défi :</strong> Faciliter l&#39;intégration de Docker dès la création du projet.<br><strong>Solution :</strong> Génération automatique de fichiers Docker et Docker Compose, adaptés à la stack choisie, permettant une exécution rapide en environnement isolé.</p>\n<h3>4. Expérience Utilisateur</h3>\n<p><strong>Défi :</strong> Créer une interface simple pour des utilisateurs non techniques.<br><strong>Solution :</strong> Développement d&#39;une interface React claire et ergonomique, guidant pas à pas la création du projet.</p>\n<h2>Objectifs</h2>\n<h3>Performance</h3>\n<ul>\n<li>Réduire le temps d&#39;initialisation des projets</li>\n<li>Uniformiser les environnements de développement</li>\n</ul>\n<h3>Collaboration</h3>\n<ul>\n<li>Faciliter le travail en équipe grâce à des structures standardisées</li>\n<li>Rendre l&#39;initialisation accessible à tous profils (techniques ou non)</li>\n</ul>\n<h2>Résultat</h2>\n<p>OneClick permet de créer en quelques instants un environnement de développement complet, prêt à être utilisé, avec une structure propre et modulaire. Le projet a été pensé pour évoluer vers un produit réel destiné aux freelances, agences et étudiants.</p>\n",
    "id": "oneclick"
  },
  {
    "title": "Safecode",
    "slug": "Safecode",
    "date": "2025-03-26T00:00:00.000Z",
    "image": "https://www.intigriti.com/blog/news/owasp-top-10",
    "technologies": [
      "Nuxt",
      "GO",
      "Docker",
      "OWAPS"
    ],
    "github": "https://github.com/Capstone-SafeCode/Documentations.git",
    "demo": "https://youtu.be/R2mLn4wOaj8",
    "featured": true,
    "order": 1,
    "content": "<h2>Description</h2>\n<p><strong>Projet de spécialisation</strong> 🎓 - Durant ma 4e année, j&#39;ai décidé de me spécialiser en CyberSécurité 🔒. Dans le cadre de la validation de celle-ci, j&#39;ai dû réaliser, en groupe de 4, une solution dans le thème de ma spé. C&#39;est de là qu&#39;est née <strong>SafeCode</strong> 🚀.</p>\n<p><strong>SafeCode</strong> est une solution qui permet de tester les possibles failles de sécurité directement dans son code, basé sur le top10 des erreurs OWAPS (The Open Web Application Security Project) 🛡️.</p>\n<p>Ce projet s&#39;appuie sur différentes technologies :</p>\n<ul>\n<li><strong>Nuxt</strong> ⚡ pour un front rapide et propre.</li>\n<li><strong>Go</strong> 🧩 pour le back autant pour l&#39;API que pour l&#39;engine d&#39;analyse. Le <strong>Go</strong> permet une rapidité d&#39;exécution.</li>\n<li><strong>MongoDB</strong> 🛢️ pour une base de données stable et modifiable à tout moment.</li>\n<li><strong>Docker</strong> 🐳 pour faire tourner l&#39;application dans un environnement sain.</li>\n</ul>\n<p><strong>Résultat</strong> 🎯 - L&#39;application permet de tester la sécurité de son code, en mettant un <code>.zip</code> 📦 ou directement en rentrant un lien vers le repository Github 🔗.<br>L&#39;utilisateur peut également retrouver son historique de test pour revenir ou revoir ses erreurs passées 📚.</p>\n<hr>\n<h2>Fonctionnalités</h2>\n<ul>\n<li><p><strong>Upload du code</strong> 🖇️ : deux manières différentes d&#39;upload son code sur l&#39;application</p>\n<ul>\n<li>On peut envoyer un <code>.zip</code>, l&#39;application se chargera de récupérer les fichiers à l&#39;intérieur 📂 et de déterminer la technologie.</li>\n<li>On peut envoyer un lien du repository Github 🔗 pour que l&#39;upload récupère directement les fichiers.</li>\n</ul>\n</li>\n<li><p><strong>Analyse</strong> 🔍 : permet d&#39;analyser le code en fonction de la technologie et des règles déterminées dans l&#39;application.</p>\n</li>\n<li><p><strong>Historique de test</strong> 🕰️ : chaque utilisateur peut retrouver dans son compte l&#39;historique des tests qu&#39;il a faits pour lui permettre de revenir sur un morceau de code ou sur une erreur précise.</p>\n</li>\n</ul>\n<hr>\n<h2>Défis et Solutions</h2>\n<p>Durant tout le projet plusieurs défis se sont confrontés à nous et en particulier à moi.</p>\n<h3>Simplification de l&#39;interface par rapport aux concurrents</h3>\n<blockquote>\n<p><strong>Défi</strong> ⚠️ : Ne pas perdre l&#39;utilisateur dès qu&#39;il arrive sur l&#39;application<br><strong>Solution</strong> ✅ : Utiliser les nouveaux codes et une interface moderne et simple</p>\n</blockquote>\n<h3>La compréhension des erreurs</h3>\n<blockquote>\n<p><strong>Défi</strong> ⚠️ : Comprendre les erreurs et surtout comment les résoudre en fonction de la technologie<br><strong>Solution</strong> ✅ : Manger des pages de documentation 📖 et s&#39;aider de l&#39;IA 🤖 pour la réalisation</p>\n</blockquote>\n<h3>L&#39;apprentissage du GO</h3>\n<blockquote>\n<p><strong>Défi</strong> ⚠️ : Apprendre un nouveau langage n&#39;est jamais évident, mais avec les connaissances que j&#39;ai acquises en C et C++ au cours de mon cursus à EPITECH, cela m&#39;a permis de comprendre vite le langage.<br><strong>Solution</strong> ✅ : Commencer par des parties que l&#39;on sait faire dans un autre langage avant de complexifier les choses.</p>\n</blockquote>\n<h3>La communication dans le groupe</h3>\n<blockquote>\n<p><strong>Défi</strong> ⚠️ : Faire en sorte que tout le groupe avance en même temps et que chaque membre ait du travail<br><strong>Solution</strong> ✅ : Rendez-vous hebdomadaire 📅 pour faire un point, en plus des points avec les Projects Managers (Féli &amp;&amp; Emilie)</p>\n</blockquote>\n<h3>L&#39;anglais</h3>\n<blockquote>\n<p><strong>Défi</strong> ⚠️ : Communiquer en anglais sur chaque rendu, documentation et rendez-vous<br><strong>Solution</strong> ✅ : Se forcer malgré les fautes, les hésitations ou les tentatives de faire passer un mot français avec l&#39;accent anglais 😅, à parler.</p>\n</blockquote>\n<hr>\n<h2>Objectifs</h2>\n<h3>Performances 🚀</h3>\n<ul>\n<li>Avoir un algorithme rapide et efficace</li>\n<li>Permettre à plusieurs utilisateurs de faire des tests simultanés</li>\n</ul>\n<h3>Ajout de nouvelles technologies facilement 🛠️</h3>\n<ul>\n<li>Pouvoir ajouter dans l&#39;engine d&#39;analyse une nouvelle technologie facilement</li>\n</ul>\n<hr>\n<h2>Résultat</h2>\n<p>La solution supporte :</p>\n<ul>\n<li>deux technologies : Python 🐍 et C# ⚙️</li>\n<li>L&#39;interface est très simple d&#39;utilisation 🎨</li>\n</ul>\n<hr>\n<h2>Vision</h2>\n<p>Cette application est amenée à évoluer :</p>\n<ul>\n<li>Plus de technologies 🔥</li>\n<li>Une plateforme collaborative pour travailler en équipe 🤝</li>\n<li>Toujours améliorer et optimiser l&#39;engine ⚡</li>\n</ul>\n",
    "id": "safecode"
  },
  {
    "title": "Portfolio",
    "slug": "portfolio",
    "date": "2025-04-03T00:00:00.000Z",
    "image": "images/logo PF Solutions.jpg",
    "technologies": [
      "Angular",
      "TypeScript",
      "TailwindCSS"
    ],
    "demo": "https://pfsolutions.tech",
    "featured": true,
    "order": 4,
    "content": "<h2>Description</h2>\n<p><strong>Projet personnel</strong> — Développement de mon site portfolio avec Angular pour présenter mes projets, compétences et expériences de manière professionnelle.</p>\n<p>Ce site est une <strong>Single Page Application</strong> responsive, intégrant :</p>\n<ul>\n<li>Une section de présentation\n_ Une liste des compétences acquises</li>\n<li>Des projets dynamiquement chargés depuis des fichiers <code>.md</code></li>\n<li>Un formulaire de contact fonctionnel</li>\n<li>Un dark mode</li>\n</ul>\n<h2>Fonctionnalités</h2>\n<ul>\n<li>Affichage dynamique des projets avec tri par technologies</li>\n<li>Responsive design avec Tailwind CSS</li>\n<li>Déploiement automatique sur mon VPS</li>\n</ul>\n<h2>Objectifs</h2>\n<ul>\n<li>Valoriser mes projets de développement</li>\n<li>Créer une base évolutive et professionnelle</li>\n<li>Faciliter les contacts avec recruteurs et clients</li>\n</ul>\n<h2>Défis &amp; Solutions</h2>\n<ul>\n<li><strong>Organisation modulaire :</strong> Angular + Lazy loading</li>\n<li><strong>Accessibilité :</strong> Respect des bonnes pratiques UX</li>\n</ul>\n<h2>🎯 Résultat</h2>\n<ul>\n<li>Un portfolio moderne et rapide</li>\n<li>Facile à maintenir grâce à la séparation du contenu et du code</li>\n<li>Deployé sur un VPS automatiquement avec Jenkins (cf: Projet Infrastructure)</li>\n</ul>\n<h2>🔭 Vision</h2>\n<ul>\n<li>Blog technique intégré</li>\n<li>Statistiques de consultation</li>\n</ul>\n",
    "id": "porfolio"
  }
]